#shader vertex
#version 330 core
layout(location=0)in vec3 position;
layout(location=1)in vec2 TexCoord;
layout(std140)uniform ExampleBlock
{
    mat4 projection;
    mat4 view;
};

out vec2 v_TexCoord;

uniform mat4 model;
void main()
{
    gl_Position=projection*view*model*vec4(position,1.0);
    v_TexCoord=TexCoord;
}

#shader fragment
#version 330 core
out vec4 FragColor;
in vec2 v_TexCoord;

float near=0.1;
float far=100.0;

float LinearizeDepth(float depth)
{
    float z=depth*2.0-1.0;
    return (2.0*near*far)/(far+near-z*(far-near));
}

uniform sampler2D texture1;
uniform sampler2D texture2;
void main()
{
    float depth=LinearizeDepth(gl_FragCoord.z)/far;
   // FragColor=mix(texture(texture1,v_TexCoord),texture(texture2,v_TexCoord),0.4)*vec4(vec3(depth),1.0);
    FragColor=mix(texture(texture1,v_TexCoord),texture(texture2,v_TexCoord),0.4);
}